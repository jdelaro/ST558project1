---
title: 'Group C Project 1 JSon vignette: *The one with Jason and temperatures'
author: "Jesse DeLaRosa and Sophia Melenikiotis"
date: "6/7/2019"
output:
  html_document:
    toc: yes
    toc_depth: 4
---

# JSON Files, what they are, what they do, and what we did

## Introduction to JSONs

JSON files, as described by [fileinfo]("https://fileinfo.com/extension/json") are files "that stores simple data structures and objects in JavaScript Object Notation (JSON) format." They are used often in storing data from web applications and servers, sometimes moving data between the two. Naturally, we found our data set from such a source, though we'll go further into detail on that matter in a later section.

## JSON and R

R has a few great packages for reading JSON data sets into R. We started by seeing if `tidyverse` had options for this, and while they did not, they did recommend using `jsonlite` as an easy package to read in JSON files. Another option is `rjson`, and both `rjson` and `jsonlite` provide access to a great function for reading in JSON datasets into R: `fromJSON()`, which lets you read in a JSON and convert it into a data frame. We chose to use `fromJSON()` from `jsonlite` since that package got `tidyverse`'s recommendation.

## An example of JSON data: Raleigh's surface temperature

Ever increasing concerns of the state of the Earth's climate has led many a meterologist to collect data on temperatures of as many regions of the world as possible. [Berkeley Earth]("http://berkeleyearth.org/about/") is an organization of researchers who have collected data pertaining to the Earth's temperature across over a billion data points dating back to the 18th century, all freely available to the public. The [Chapel Hill Open Data](https://www.chapelhillopendata.org/page/home1/) website pulled a piece of this massive dataset and created a JSON file with information pertaining to Raleigh's average surface temperature from over 3000 days between 1743 and 2013.

First, we'll demonstrate how easy it is to pull data from a JSON file into R using the `fromJSON` function and then show what the data frame looks like before describing what the variables represent.
```{r setup, include=TRUE, warning=FALSE, message=FALSE}
library(tidyverse)
library(jsonlite)
RaleighJson <- fromJSON("/Users/sophiamelenikiotis/Desktop/ST 558/earth-surface-temperature-data0.json")
head(RaleighJson)
```

The `city`, `country`, `latitude`, and `longitude` values correspond to where the data is coming from. Since the good people of Chapel Hill only pulled the Raleigh data, however, all of these values are the same across the 3,239 records we're working with. `Average temperature` is the average temperature of the day, `dt` is the date the data was recorded, and `Average temperature uncertainty` corresponds to the measured accuracy of the measurement. 

We'll convert this data frame to a tibble before we continue, to make the data easier to work with `tidyverse`.

```{r Raleightibble, include=TRUE, warning = FALSE}
Raleightibble <- tbl_df(RaleighJson)
Raleightibble
```

With growing concerns about temperature changes over time, having a data set that spans Raleigh's history back to when it was under British rule should give us a good idea of how such changes look. We'll examine these in terms of season and across years. First I'll create a variable specifically for each observation's year and moth, then use those for each observation's season and year range.

```{r Raleighdatemod, include=TRUE, warning = FALSE}
MonthYearandSeason <- function(df, ...){
  df2 <- df %>% mutate("Year" = as.integer(substr(dt, 1, 4)))
  df3 <- df2 %>% mutate("Month" = as.integer(substr(dt, 6, 7)))
  df4 <- df3 %>% mutate("Season" = ifelse(Month > 2 & Month < 6, "Spring",
                                       ifelse(Month > 5 & Month < 9, "Summer",
                                              ifelse(Month > 8 & Month < 12, "Fall", "Winter"))))
  df5 <- df4 %>% mutate("YearRange" = ifelse(Year > 1742 & Year < 1793, "1743-1792",
                                      ifelse(Year > 1792 & Year < 1843, "1793-1842",
                                      ifelse(Year > 1842 & Year < 1893, "1843-1892",
                                      ifelse(Year > 1892 & Year < 1943, "1893-1942",
                                      ifelse(Year > 1942 & Year < 1993, "1943-1992", "1993-2013"))))))
  return(df5)
}
Raleigh <- MonthYearandSeason(Raleightibble)
Raleigh
```


### Average Temperature 
The chart below shows the averages for the different seasons. If we filter down to the specific seasons for 2000 and beyond. We can see what year had the highest and lowest average temperature in said season. 
```{r,echo=FALSE}
Raleigh_2000 <- Raleigh %>% filter(Year >= 2000) 
g <- ggplot(data = Raleigh_2000, mapping = aes(x=Raleigh_2000$Season,y = Raleigh_2000$averagetemperature))
g + geom_bar(stat="identity") + labs(x="Raleigh Seasons",y="Raleigh Average Temperature")


```


The chart below shows the average temperature for the different years from 2000 onward for the summer. We see that between 2005 and 2010 had the highest temperature that exceeded 28 degrees Celsius. 
```{r, echo=FALSE}
Raleigh_summer <- Raleigh_2000 %>% filter(Season == "Summer")
Raleigh_winter <- Raleigh_2000 %>% filter(Season == "Winter")

g <- ggplot(data=Raleigh_summer, mapping=aes(x=Raleigh_summer$Year,y=Raleigh_summer$averagetemperature))

g + geom_line(stat="identity") + labs(x="Year of Raleigh Summer",y="Raleigh Average Temperature")

```

We see the highest temperature occured a little after 2000 above 8 degrees and also after 2010. 
```{r,echo=FALSE}
g <- ggplot(data=Raleigh_winter, mapping=aes(x=Raleigh_winter$Year,y=Raleigh_winter$averagetemperature))

g + geom_line(stat="identity") + labs(x="Year of Raleigh Winter",y="Raleigh Average Temperature")

```

### Average Temperature (Uncertainty)
The graph below shows the season values for the average temperatures under uncertainty. We see how summer is only slightly higher compared to the above bar chart. 
```{r,echo=FALSE}
Raleigh_uncertain_2000 <- Raleigh %>% filter(Year >= 2000) 
g <- ggplot(data = Raleigh_uncertain_2000, mapping = aes(x=Raleigh_uncertain_2000$Season,y = Raleigh_uncertain_2000$averagetemperatureuncertainty))
g + geom_bar(stat="identity") + labs(x="Raleigh Seasons",y="Raleigh Average Temperature (Uncertainty)")
```


After looking at the line chart below we see where the highest temperatue almost before 2010. 
```{r, echo=FALSE}
Raleigh_summer1 <- Raleigh_2000 %>% filter(Season == "Summer")
Raleigh_winter1 <- Raleigh_2000 %>% filter(Season == "Winter")

g <- ggplot(data=Raleigh_summer1, mapping=aes(x=Raleigh_summer1$Year,y=Raleigh_summer1$averagetemperatureuncertainty))

g + geom_line(stat="identity") + labs(x="Year of Raleigh Summer",y="Raleigh Average Temperature (Uncertainty)")

```

Below show a correlation matrix of all the variables. 
```{r,echo=FALSE}
library(corrplot)
M <- cor(Raleigh_2000$averagetemperature,Raleigh_2000$averagetemperatureuncertainty)
M

```


Below show a scatterplot of average temperature and average temperature (uncertainty)
```{r,echo=FALSE}
g <- ggplot(data=Raleigh_2000,mapping=aes(x=Raleigh_2000$averagetemperature,y=Raleigh_2000$averagetemperatureuncertainty))

g + geom_point()
```

```{r,echo=FALSE}
preG <- Raleigh %>% group_by(Year) %>% summarise(`Average Mean Temperature`= mean(averagetemperature, na.rm = TRUE))
g <- ggplot(data = preG, aes(Year, `Average Mean Temperature`))
g + geom_point(color = "darkorange", stat = "identity") + scale_y_continuous(limits = c(13,16)) + geom_smooth()
```


```{r,echo=FALSE}
preG <- Raleigh %>% group_by(Year) %>% summarise(`Average Mean Temperature`= mean(averagetemperatureuncertainty, na.rm = TRUE))
g <- ggplot(data = preG, aes(Year, `Average Mean Temperature`))
g + geom_point(color = "darkorange", stat = "identity") + geom_smooth()
```
##### Average Temperature across year ranges

Here we'll look at the average temperatures across year ranges. This could get graphic...

```{r avgtempacrossrange, include=TRUE, warning = FALSE, message = FALSE}
preG <- Raleigh %>% group_by(YearRange) %>% summarise(`Average Mean Temperature`= mean(averagetemperature, na.rm = TRUE))
g <- ggplot(data = preG, aes(YearRange, `Average Mean Temperature`))
g + geom_histogram(fill = "darkorange", stat = "identity")
```

This graph supports the same pattern that the smoothing line in the previous graph indicated, indicating an upward trend.

##### Average Temperature across seasons

Here we'll look at average temperatures across the seasons in Raleigh.

```{r avgtempacrossseason, include=TRUE, warning = FALSE, message = FALSE}
g <- ggplot(Raleigh, aes(Season, averagetemperature), show.legend = TRUE)
g + geom_boxplot(aes(color = Season)) + scale_fill_discrete(name = "Season") + ggtitle("Average Temperature across Season")
```
To my surprise as a Raleigh local, the winters are actually colder than the summers! Sometimes its hard to tell the difference...
##### Average Temperature across seasons and year ranges
Here we'll facet the average temperatures across year ranges and look at the seasonal temperature averages across them all.

```{r avgtempacrossseasonandrange, include=TRUE, warning = FALSE, message = FALSE}
preG <- Raleigh %>% group_by(YearRange, Season) %>% summarise(mean = mean(averagetemperature, na.rm = TRUE))
g <- ggplot(data = preG, aes(x = YearRange, y = mean))
g + geom_bar(aes(fill = as.factor(Season)), stat = "identity", position = "dodge") + labs(x ="Year Ranges") + scale_fill_discrete(name = "")
```
